/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */

#import "NSObject.h"

@class NSMutableSet, NSSet, NSString;

@interface SBProcess : NSObject
{
    NSMutableSet *_assertions;
    NSMutableSet *_limitlessAssertions;
    struct dispatch_queue_s *_assertionsQueue;
    NSString *_jobLabel;
    BOOL _running;
    unsigned int _terminateOnSuspension:1;
    unsigned int _frontmost:1;
    unsigned int _nowPlayingWithAudio:1;
    unsigned int _recordingAudio:1;
    unsigned int _usesSocketMonitoring:1;
    unsigned int _supportsBackgroundTaskAssertions:1;
    unsigned int _supportsSuspendOnLock:1;
    unsigned int _hasWatchdogAssertionsOut:1;
    unsigned int _receivingPacketsFromAccessory:1;
    int _backgroundJetsamPriority;
    int _currentJetsamPriority;
    int _activationDecounter;
    int _suspendCount;
    struct dispatch_queue_s *_suspendQueue;
    double _timedAssertionReferenceTime;
    struct dispatch_group_s *_timerLifecycleGroup;
    struct dispatch_source_s *_backgroundPermissionCheckTimer;
    struct dispatch_source_s *_backgroundPermissionExpirationWarningTimer;
    struct dispatch_source_s *_taskCompletionAllowIdleSleepTimer;
    int _throttleUpCPUCount;
    int _throttleUpUICount;
    struct dispatch_queue_s *_throttleUpQueue;
    int _priority;
    NSSet *_allowedLockedFilePaths;
    int _pid;
    unsigned int _eventPort;
    unsigned int _taskNamePort;
    unsigned int _taskPort;
    struct SBProcessTimes _times;
    double _unsuspendLimitStart;
    int _unsuspendLimitCount;
}

+ (void)_logJetsamPriorities;
+ (void)initialize;
+ (id)_allProcesses;
+ (id)processForPid:(int)arg1;
+ (id)launchedProcessWithBundleIdentifier:(id)arg1 path:(id)arg2 arguments:(id)arg3 environment:(id)arg4 standardOutputPath:(id)arg5 standardErrorPath:(id)arg6 machServices:(id)arg7 threadPriority:(long long)arg8 frontmost:(BOOL)arg9 backgroundJetsamPriority:(int)arg10 waitForDebugger:(BOOL)arg11 disableASLR:(BOOL)arg12 allowedLockedFilePaths:(id)arg13 terminateOnSuspension:(BOOL)arg14;
+ (int)defaultBackgroundJetsamPriority;
+ (void)enumerateAllProcessesWithBlock:(id)arg1;
+ (void)shutdownSuspendedProcessSockets;
+ (void)scheduleTaskCompletionAllowIdleSleep;
+ (void)cancelTaskCompletionAllowIdleSleep;
+ (void)hostwideUserElapsedCPUTime:(double *)arg1 systemElapsedCPUTime:(double *)arg2 idleElapsedCPUTime:(double *)arg3;
- (id)initWithPid:(int)arg1 frontmost:(BOOL)arg2 backgroundJetsamPriority:(int)arg3 jobLabel:(id)arg4 eventPortName:(id)arg5 allowedLockedFilePaths:(id)arg6 terminateOnSuspension:(BOOL)arg7 execTime:(double)arg8;
- (void)dealloc;
@property(getter=isRunning) BOOL running;
- (unsigned int)suspendQueue_taskPort;
@property unsigned int taskPort;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) NSString *name;
- (id)debugDescription;
- (id)description;
@property BOOL usesSocketMonitoring;
@property BOOL supportsBackgroundTaskAssertions;
@property BOOL supportsSuspendOnLock;
@property(getter=isRecordingAudio) BOOL recordingAudio;
@property BOOL hasWatchdogAssertionsOut;
@property(getter=isFrontmost) BOOL frontmost;
@property(readonly) BOOL hasResumeAssertion;
@property(getter=isNowPlayingWithAudio) BOOL nowPlayingWithAudio;
@property(getter=isReceivingPacketsFromAccessory) BOOL receivingPacketsFromAccessory;
@property(readonly) int backgroundJetsamPriority;
@property(readonly) int currentJetsamPriority;
@property(readonly) BOOL terminateOnSuspension;
@property(readonly) int suspendCount;
- (BOOL)suspend;
- (BOOL)resume;
- (BOOL)throttleUpCPU;
- (BOOL)throttleDownCPU;
- (BOOL)throttleUpUI;
- (BOOL)throttleDownUI;
- (void)assertionsQueue_scheduleTaskCompletionAllowIdleSleep;
- (void)assertionsQueue_cancelTaskCompletionAllowIdleSleep;
- (BOOL)changeCounter:(int *)arg1 change:(int)arg2 queue:(struct dispatch_queue_s *)arg3 ifBlockSucceeds:(id)arg4;
- (BOOL)incrementCounter:(int *)arg1 queue:(struct dispatch_queue_s *)arg2 ifBlockSucceeds:(id)arg3;
- (BOOL)decrementCounter:(int *)arg1 queue:(struct dispatch_queue_s *)arg2 ifBlockSucceeds:(id)arg3;
@property(readonly) NSSet *lockedFilePathsIgnoringAllowed;
- (void)watchdogTerminateWithReason:(int)arg1 format:(id)arg2;
- (void)_notifyOfExpirationWarning;
- (void)dispatchSharedLockCheck;
- (int)suspendQueue_currentJetsamPriority;
- (void)suspendQueue_updateJetsamPriority;
- (BOOL)suspendQueue_taskSuspend;
- (BOOL)suspendQueue_taskResume;
- (BOOL)suspendQueue_taskShutdownSockets:(int)arg1;
@property(readonly) int priority;
- (BOOL)throttleUpQueue_setPriority:(int)arg1;
- (void)killWithSignal:(int)arg1;
- (void)waitToExecOrExit;
- (void)_forceCrashReportWithReason:(int)arg1 description:(id)arg2;
@property(readonly, getter=isBeingDebugged) BOOL beingDebugged;
- (BOOL)assertionsQueue_isBeingDebugged;
@property(readonly, getter=isBeingPtraced) BOOL beingPtraced;
@property(readonly) double elapsedCPUTime;
@property(readonly) double execTime;
- (void)markWatchdogCPUTimes;
- (void)assertionsQueue_markWatchdogCPUTimes;
- (id)_crashReportCPUUsageInfo;
- (void)addAssertion:(id)arg1;
- (void)removeAssertion:(id)arg1;
- (void)removeAllAssertions;
- (id)assertions;
@property(readonly) double remainingAllowedAssertionDuration;
- (double)assertionsQueue_permittedBackgroundDuration;
- (void)_cancelTimers;
- (struct dispatch_source_s *)assertionsQueue_setupOneShotTimer:(double)arg1 withBlock:(id)arg2;
- (void)assertionsQueue_updateBackgroundPermissionCheckTimer;
@property(readonly) unsigned int taskNamePort; // @synthesize taskNamePort=_taskNamePort;
@property(readonly) unsigned int eventPort; // @synthesize eventPort=_eventPort;
@property(readonly) int pid; // @synthesize pid=_pid;
@property(readonly) int throttleUpUICount; // @synthesize throttleUpUICount=_throttleUpUICount;
@property(readonly) int throttleUpCPUCount; // @synthesize throttleUpCPUCount=_throttleUpCPUCount;
@property(copy) NSString *jobLabel; // @synthesize jobLabel=_jobLabel;
@property(copy) NSSet *allowedLockedFilePaths; // @synthesize allowedLockedFilePaths=_allowedLockedFilePaths;

@end

